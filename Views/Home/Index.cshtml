

@using RedhawkApps.Web.ViewModel

@model HomeViewModel

<div class="container-fluid">
	<nav aria-label="breadcrumb">
		<ol class="breadcrumb" id="breadcrumblist" style="margin-bottom:-15px;">
			<li class="breadcrumb-item"><a href="#">@Model.LoginDomain</a></li>
			<li class="breadcrumb-item active" id="activebreadcrumb" aria-current="page"></li>
		</ol>
	</nav>

	<div id="notification-panel"></div>
	<div id="main-content" class="main-content"></div>
</div>


<input type="hidden" id="DiamondUserName" value="@Model.UserName" />
<input type="hidden" id="DiamondUserId" value="@Model.UserId" />
<input type="hidden" id="loginDomain" value="@Model.LoginDomain" />
<input type="hidden" id="DiamondUserRole" value="@Model.Role" />


<script>


	// This script implements simple routing by loading partial HTML files
	// named corresponding to fragment identifiers.
	//
	// By Curran Kelleher October 2014

	// Wrap everything in an immediately invoked function expression,
	// so no global variables are introduced.
	$(function () {

		
		//var sessionTimeoutWarning = @Session.Timeout * 60 * 1000;

		//var timeout = setTimeout(SessionEnd, sessionTimeoutWarning);

		//var events = ['mousedown',  'keypress', 'scroll', 'touchstart'];
		//events.forEach(function (name) {
		//	document.addEventListener(name, ResetSession, true);
		//});


		//var token = document.cookie.split('=')[1];

		// Stores the cached partial HTML pages.
		// Keys correspond to fragment identifiers.
		// Values are the text content of each loaded partial HTML file.
		var partialsCache = {}

		// Gets the appropriate content for the given fragment identifier.
		// This function implements a simple cache.
		function getContent(fragmentId, callback) {
			debugger;
			if (fragmentId === "")
				return;

			// If the page has been fetched before,
			if (partialsCache[fragmentId]) {

				// pass the previously fetched content to the callback.
				callback(partialsCache[fragmentId]);
			}
			else {
				var loadPanel = $("#shared-loadpanel")
					.dxLoadPanel({
						position: "{my: 'center', at: 'center', of: window}",
						shading: true
					})
					.dxLoadPanel("instance");
				loadPanel.show();

				$.ajax({
					async: true,
						url: "/home/" + fragmentId,

				}).done(function (response, textStatus, jqXHR) {
					callback(response);
					loadPanel.hide();
					})
					.fail(function (response) {
						if (response.status = 404) {

							callback("Page Not Found ! ");
						}
						if (response.status = 401) {

							callback("Unauthorized! ");
						}
						loadPanel.hide();
					})

			}
		}

		// Sets the "active" class on the active navigation link.
		function setActiveLink(fragmentId) {
			$(".nav-item a").each(function (i, linkElement) {
				var link = $(linkElement),
					pageName = link.attr("href").substr(1);
				if (pageName === fragmentId) {
					link.parent().addClass("tp-nav-item-active");
				} else {
					link.parent().removeClass("tp-nav-item-active");
				}
			});
		}

		//function SessionEnd() {
		//	alert("Your current session has expired. Please login again to continue");
		////	window.location = "/auth/logout";
		//}

		//function ResetSession() {
		//	clearTimeout(timeout);
		//	timeout = setTimeout(SessionEnd, sessionTimeoutWarning);

		//}


		// Updates dynamic content based on the fragment identifier.
		function navigate() {
			
			//ResetSession();
			// Isolate the fragment identifier using substr.
			// This gets rid of the "#" character.
			var fragmentId = location.hash.substr(1);

			// Toggle the "active" class on the link currently navigated to.
			setActiveLink(fragmentId);

			// Set the "content" div innerHTML based on the fragment identifier.
			getContent(fragmentId, function (content) {
				$("#main-content").html(content);
			});
		}

		// If no fragment identifier is provided,
		if (!location.hash) {

			// default to #home.
			location.hash = "#dashboard";
		}

		// Navigate once to the initial fragment identifier.
		navigate();

		// Navigate whenever the fragment identifier value changes.
		$(window).bind('hashchange', navigate);
	});

</script>